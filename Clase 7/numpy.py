# -*- coding: utf-8 -*-
"""Numpy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PvVa-MSy4lcqn2Lsm6-gB1T-kV4oYqXd
"""

'''
Clase:        Guía de NumPy
Tema:         Introducción al manejo de datos tabulares con NumPy
Ejercicio:    Casp de estudio
Descripción:  Aprender a usar Nunmpy
Autor:        Emilio Josue Martinez Aguilera
Fecha:        2025-02-26
Estado:       [ Terminado ]
'''

import numpy as np
my_list = [1, 2, 3, 4, 5]
arr = np.array(my_list)
print(arr)

zeros = np.zeros(5)
print(zeros)
ones = np.ones(5)
print(ones)

arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
resultado = arr1 + arr2
arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
resultado = arr1 + arr2

arr = np.array([1, 2, 3])
result = arr + 5
print(result)

arr = np.array([1, 2, 3, 4, 5])
slice = arr[0:4]
print(slice)
# Recupera los elementos 2, 3 y 4

consumo = np.array([
    [12.5, 13.2, 11.9, 14.0, 13.5, 15.0, 14.3],
    [10.1, 10.5, 10.0, 11.2, 11.5, 12.0, 11.8],
    [14.0, 14.2, 13.9, 15.5, 15.1, 16.0, 15.8],
    [9.0, 9.2, 8.9, 9.5, 9.8, 10.0, 9.7],
    [16.2, 16.5, 16.0, 17.1, 17.4, 18.0, 17.8],
    [11.0, 11.3, 11.1, 12.0, 12.4, 12.8, 12.5],
    [13.5, 13.8, 13.2, 14.1, 14.6, 15.0, 14.9],
    [10.8, 11.0, 10.6, 11.5, 11.8, 12.2, 12.0],
    [15.1, 15.5, 15.0, 16.0, 16.4, 17.0, 16.7],
    [8.5, 8.7, 8.4, 9.0, 9.2, 9.5, 9.3],
])
#axis=0 para días, axis=1 para hogares
print("Dimensiones:", consumo.ndim)
print("Forma:", consumo.shape)
print("Tipo de datos:", consumo.dtype)
print("Consumo primer hogar:", consumo[0])
print("Consumo del dia miercoles (dia 3)", consumo[:, 2])
promedio_x_hogar = np.mean(consumo, axis=1)
promerdi_x_dias = np.mean(consumo, axis=0)
total = np.sum(consumo)
print(promedio_x_hogar)
print(promerdi_x_dias)
print(total)
maximo = np.max(consumo,axis= 1)
minimo = np.min(consumo,axis=0)
desviacion = np.std(consumo,axis=0)
print(maximo)
print(minimo)
print(desviacion)
consumo_tot_hogar = np.sum(consumo, axis=1)
altos = consumo_tot_hogar > 100
consumo_mayor_100 = np.where(altos)[0]
print(consumo_mayor_100)
hogar_mayor_dia = np.argmax(consumo_tot_hogar)
hogar_mas_efinciaz = np.argmin(consumo_tot_hogar)
print(consumo_tot_hogar)
print(hogar_mayor_dia)
print(hogar_mas_efinciaz)

consumo_normalizado = (consumo - consumo.min()) / (np.max(consumo) - np.min(consumo))
print(consumo_normalizado)

#axis=0 para días, axis=1 para hogares
#1. ¿Cuál es el consumo del hogar 5 el viernes (día 5)?
print(consumo[4, 4])
#2. Usando indexación, muestra el consumo de los últimos 3 hogares el domingo.
for hogar in consumo[-3:]:
    print(hogar[-1])
#3. Calcula el promedio de consumo los fines de semana (sábado y domingo, columnas 5 y 6).
promedio_fin_semana = (((np.sum(consumo[:, 5]))+(np.sum(consumo[:, 6]))) / 2)
print(promedio_fin_semana)

#4.¿Qué día de la semana tiene la mayor desviación estándar entre hogares? Explica qué indica esto.


dias = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo']

desviacion_estandar = np.std(consumo, axis=0)
max_posicion = np.argmax(desviacion_estandar)

print("El día con mayor desviación estándar es", dias[max_posicion])
#Esto significa que consumo del sabado esta alejada del promdeio por que ese dia se consume mas o menos de lo normal, es decir algunos hogares consumen mucho y otros muy poco

#5. Identifica los 3 hogares con menor consumo total durante la semana. Muestra sus índices y valores.
#print(menor_consuma_hogar)
menor_consuma_total_hogar =np.sum(consumo, axis=1)
#print(menor_consuma_total_hogar)
menor_consuma_hogar =np.min(menor_consuma_total_hogar)
valores = np.sort(menor_consuma_total_hogar)[:3]
#print(valores)
#print(menor_consuma_hogar)
tres_casas_menor_consumo = np.argsort(menor_consuma_total_hogar)[:3]
#print(f"Las csas con menor consumo son:{tres_casas_menor_consumo} y con valores {valores}")
for i in tres_casas_menor_consumo:
    print(f"La casa {i} consumió {menor_consuma_total_hogar[i]:.2f}")
print(consumo[2])
#6. Si el hogar 3 aumenta su consumo en un 10% cada día, ¿cuál sería su nuevo consumo total semanal?
consumo_total = (consumo[2][0] * (1.10**7 - 1))/ (1.10 - 1)
print(f"El nuevo consumo total es: {consumo_total:.2f} kWh")